import os
import pandas as pd
from snakemake.utils import validate, min_version

min_version("5.1.2")

configfile: "config/config.yaml"


validate(config, schema="schemas/config.schema.yaml")

samples = pd.read_csv(config["samples"], sep="\t").set_index("sample", drop=False)
validate(samples, "schemas/samples.schema.yaml")


replicates = pd.read_csv(config["replicates"], dtype=str, sep="\t").set_index(
    ["sample", "replicate", "time"], drop=False
)
replicates.index = replicates.index.set_levels(
    [i.astype(str) for i in replicates.index.levels]
)  # enforce str in index
validate(replicates, schema="schemas/replicates.schema.yaml")
workdir: config["work_directory"]

is_paired = config["paired"]

include: "rules/common.smk"

rule all:
    input:
        "qc/multiqc.html",
        "counts/merged.tsv",
        "counts/merged_raw.tsv",
        "counts/merged_tpm.tsv",
        get_visualisation_ouptuts,
        "visualisations/annotation.json",

rule all_with_de:
    input:
        "qc/multiqc.html",
        "counts/merged.tsv",
        "counts/merged_raw.tsv",
        "counts/merged_tpm.tsv",
        get_visualisation_ouptuts,
        "visualisations/annotation.json",
        "deseq2/dds.rds",
        "deseq2/diffexp.tsv",
        "deseq2/pca_plot.svg",

include: "rules/qc.smk"
include: "rules/trim.smk"
include: "rules/genome_index.smk"
include: "rules/align.smk"
include: "rules/counts.smk"
include: "rules/diff_expression.smk"
include: "rules/visualisation_helpers.smk"
